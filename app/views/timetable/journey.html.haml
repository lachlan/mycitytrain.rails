.journey{:id => h("#{@journey.departing.code}_#{@journey.arriving.code}_#{format_time(@journey.departing_at, :iso8601).gsub(/[:+]/, '-')}")}
  .toolbar
    %h1.title= SITE_NAME
    %a.back{:href => "#"}Back   
  - if @journey.changes.nil? or @journey.changes.empty?
    %p.item No details available.
  - else
    %ol.list
      - @journey.changes.each do |change|
        - change.each do |stop|
          %li
            %span.stops.group
              - if stop == change.first
                %span.countdown.nowrap{:class => classify_duration_to_now(stop.departing_at)}= duration_in_concise_words_to_now(stop.departing_at)
                %span.station.nowrap= stop.station_name
                %span.time.nowrap= format_time(stop.departing_at)
              - else
                %span.countdown.nowrap{:class => classify_duration_to_now(stop.arriving_at)}= duration_in_concise_words_to_now(stop.arriving_at)
                %span.station.nowrap= stop.station_name
                %span.time.nowrap= format_time(stop.arriving_at)
                - if stop.platform.to_i > 0 and (stop == change.first or stop == change.last)
                  %span.platform.nowrap platform #{h stop.platform}
                - if change != @journey.changes.last and stop == change.last
                  %span.change.nowrap change service
    %p #{h duration_in_words(@journey.departing_at, @journey.arriving_at).capitalize} duration.